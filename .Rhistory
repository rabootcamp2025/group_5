#| echo: false
#| warning: false
library(tidyverse)
library(quanteda)
library(jsonlite)
library(readtext)
library(here)
speeches_path <- list.files(here("data/hein_bound_imm"), pattern = "^speeches", full.names = TRUE)
descr_path <- list.files(here("data/hein_bound_imm"), pattern = "^descr", full.names = TRUE)
library(readr)
# テキストファイルを読み込む
speech_delim <- function(x){read_delim(x, delim = "|",
col_names = c("doc_id", "text"),
quote = "", trim_ws = TRUE)}
speeches_list <- map(speeches_path, speech_delim)
speeches_list <- namesspeeches_list$
descr_delim <- function(x){read_delim(x, delim = "|",
col_names = c("doc_id", "text"),
quote = "", trim_ws = TRUE)}
speeches_list <- map(speeches_path, speech_delim)
descr_delim <- function(x){read_delim(x, delim = "|",
col_names = c("doc_id", "text"),
quote = "", trim_ws = TRUE)}
descr_list <- map(descr_path, descr_delim)
speech <- do.call(rbind,speeches_list)
descr <- do.call(rbind,descr_list) %>%
rename(tag = text)
speech_data <- left_join(speech, descr, by = "doc_id")
speech_data <- speech_data %>%
filter(X3 != 18940614)
names(speech_data)
speech_corpus <- corpus(speech_data)
speech_token_sents <- tokens(speech_corpus, what = "sentence")
speech_tokens <- tokens(speech_token_sents, what = "word")
str(speech_token_sents)
head(speech_token_sents)
str(head(speech_token_sents))
lengths(head(speech_token_sents))
lengths(head(speech_token))
lengths(head(speech_tokens))
speech_corpus_tokens <- corpus(speech_token_sents)
speech_sentences <- corpus_reshape(speech_corpus, to = "sentences")
# 文 → 単語 にトークン化
speech_tokens <- tokens(speech_sentences, what = "word")
head(speech_tokens)
head(speech_sentences)
speech_tokens %>%
quanteda::tokens_remove(stopwords, valuetype = "fixed") %>%
quanteda::dfm() %>%
quanteda::dfm_group(groups = category) %>%
quanteda::dfm_trim(min_termfreq = 20L) %>%
quanteda::fcm() %>%
quanteda.textplots::textplot_network()
library(textplots)
inatall.package("textplots")
install.package("textplots")
inatall.packages("textplots")
install.packages("quanteda.textplots")
library(quanteda.textplots)
speech_tokens %>%
quanteda::tokens_remove(stopwords, valuetype = "fixed") %>%
quanteda::dfm() %>%
quanteda::dfm_group(groups = category) %>%
quanteda::dfm_trim(min_termfreq = 20L) %>%
quanteda::fcm() %>%
quanteda.textplots::textplot_network()
speech_tokens %>%
quanteda::tokens_remove(stopwords, valuetype = "fixed") %>%
quanteda::dfm() %>%
quanteda::dfm_trim(min_termfreq = 20L) %>%
quanteda::fcm() %>%
quanteda.textplots::textplot_network()
speech_tokens %>%
quanteda::tokens_remove(stopwords, valuetype = "fixed")
speech_tokens %>%
quanteda::tokens_remove(speech_tokens, valuetype = "fixed") %>%
quanteda::dfm() %>%
quanteda::dfm_trim(min_termfreq = 20L) %>%
quanteda::fcm() %>%
quanteda.textplots::textplot_network()
install.packages("rtweet")
library(rtweet)
stopwords <- rtweet::stopwordslangs%>%
dplyr::filter(lang == "en") %>%
speech_tokens %>%
quanteda::tokens_remove(speech_tokens, valuetype = "fixed") %>%
quanteda::dfm() %>%
quanteda::dfm_trim(min_termfreq = 20L) %>%
quanteda::fcm() %>%
quanteda.textplots::textplot_network()
stopwords <- rtweet::stopwordslangs
library(rtweet)
install.packages("rtweet")
library(rtweet)
1+1
install.packages("rtweet")
